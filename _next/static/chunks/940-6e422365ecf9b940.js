"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[940],{7940:function(e,t,r){function isArray(e){return Array.isArray?Array.isArray(e):"[object Array]"===getTag(e)}r.d(t,{Z:function(){return Fuse}});let u=1/0;function baseToString(e){if("string"==typeof e)return e;let t=e+"";return"0"==t&&1/e==-u?"-0":t}function toString(e){return null==e?"":baseToString(e)}function isString(e){return"string"==typeof e}function isNumber(e){return"number"==typeof e}function isBoolean(e){return!0===e||!1===e||isObjectLike(e)&&"[object Boolean]"==getTag(e)}function isObject(e){return"object"==typeof e}function isObjectLike(e){return isObject(e)&&null!==e}function isDefined(e){return null!=e}function isBlank(e){return!e.trim().length}function getTag(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":Object.prototype.toString.call(e)}let LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY=e=>`Invalid value for key ${e}`,PATTERN_LENGTH_TOO_LARGE=e=>`Pattern length exceeds max of ${e}.`,MISSING_KEY_PROPERTY=e=>`Missing ${e} property in key`,INVALID_KEY_WEIGHT_VALUE=e=>`Property 'weight' in key '${e}' must be a positive integer`,s=Object.prototype.hasOwnProperty;let KeyStore=class KeyStore{constructor(e){this._keys=[],this._keyMap={};let t=0;e.forEach(e=>{let r=createKey(e);this._keys.push(r),this._keyMap[r.id]=r,t+=r.weight}),this._keys.forEach(e=>{e.weight/=t})}get(e){return this._keyMap[e]}keys(){return this._keys}toJSON(){return JSON.stringify(this._keys)}};function createKey(e){let t=null,r=null,u=null,i=1,n=null;if(isString(e)||isArray(e))u=e,t=createKeyPath(e),r=createKeyId(e);else{if(!s.call(e,"name"))throw Error(MISSING_KEY_PROPERTY("name"));let c=e.name;if(u=c,s.call(e,"weight")&&(i=e.weight)<=0)throw Error(INVALID_KEY_WEIGHT_VALUE(c));t=createKeyPath(c),r=createKeyId(c),n=e.getFn}return{path:t,id:r,weight:i,src:u,getFn:n}}function createKeyPath(e){return isArray(e)?e:e.split(".")}function createKeyId(e){return isArray(e)?e.join("."):e}var i={isCaseSensitive:!1,ignoreDiacritics:!1,includeScore:!1,keys:[],shouldSort:!0,sortFn:(e,t)=>e.score===t.score?e.idx<t.idx?-1:1:e.score<t.score?-1:1,includeMatches:!1,findAllMatches:!1,minMatchCharLength:1,location:0,threshold:.6,distance:100,useExtendedSearch:!1,getFn:function(e,t){let r=[],u=!1,deepGet=(e,t,s)=>{if(isDefined(e)){if(t[s]){let i=t[s],n=e[i];if(isDefined(n)){if(s===t.length-1&&(isString(n)||isNumber(n)||isBoolean(n)))r.push(toString(n));else if(isArray(n)){u=!0;for(let e=0,r=n.length;e<r;e+=1)deepGet(n[e],t,s+1)}else t.length&&deepGet(n,t,s+1)}}else r.push(e)}};return deepGet(e,isString(t)?t.split("."):t,0),u?r:r[0]},ignoreLocation:!1,ignoreFieldNorm:!1,fieldNormWeight:1};let n=/[^ ]+/g;function norm(e=1,t=3){let r=new Map,u=Math.pow(10,t);return{get(t){let s=t.match(n).length;if(r.has(s))return r.get(s);let i=1/Math.pow(s,.5*e),c=parseFloat(Math.round(i*u)/u);return r.set(s,c),c},clear(){r.clear()}}}let FuseIndex=class FuseIndex{constructor({getFn:e=i.getFn,fieldNormWeight:t=i.fieldNormWeight}={}){this.norm=norm(t,3),this.getFn=e,this.isCreated=!1,this.setIndexRecords()}setSources(e=[]){this.docs=e}setIndexRecords(e=[]){this.records=e}setKeys(e=[]){this.keys=e,this._keysMap={},e.forEach((e,t)=>{this._keysMap[e.id]=t})}create(){!this.isCreated&&this.docs.length&&(this.isCreated=!0,isString(this.docs[0])?this.docs.forEach((e,t)=>{this._addString(e,t)}):this.docs.forEach((e,t)=>{this._addObject(e,t)}),this.norm.clear())}add(e){let t=this.size();isString(e)?this._addString(e,t):this._addObject(e,t)}removeAt(e){this.records.splice(e,1);for(let t=e,r=this.size();t<r;t+=1)this.records[t].i-=1}getValueForItemAtKeyId(e,t){return e[this._keysMap[t]]}size(){return this.records.length}_addString(e,t){if(!isDefined(e)||isBlank(e))return;let r={v:e,i:t,n:this.norm.get(e)};this.records.push(r)}_addObject(e,t){let r={i:t,$:{}};this.keys.forEach((t,u)=>{let s=t.getFn?t.getFn(e):this.getFn(e,t.path);if(isDefined(s)){if(isArray(s)){let e=[],t=[{nestedArrIndex:-1,value:s}];for(;t.length;){let{nestedArrIndex:r,value:u}=t.pop();if(isDefined(u)){if(isString(u)&&!isBlank(u)){let t={v:u,i:r,n:this.norm.get(u)};e.push(t)}else isArray(u)&&u.forEach((e,r)=>{t.push({nestedArrIndex:r,value:e})})}}r.$[u]=e}else if(isString(s)&&!isBlank(s)){let e={v:s,n:this.norm.get(s)};r.$[u]=e}}}),this.records.push(r)}toJSON(){return{keys:this.keys,records:this.records}}};function createIndex(e,t,{getFn:r=i.getFn,fieldNormWeight:u=i.fieldNormWeight}={}){let s=new FuseIndex({getFn:r,fieldNormWeight:u});return s.setKeys(e.map(createKey)),s.setSources(t),s.create(),s}function parseIndex(e,{getFn:t=i.getFn,fieldNormWeight:r=i.fieldNormWeight}={}){let{keys:u,records:s}=e,n=new FuseIndex({getFn:t,fieldNormWeight:r});return n.setKeys(u),n.setIndexRecords(s),n}function computeScore$1(e,{errors:t=0,currentLocation:r=0,expectedLocation:u=0,distance:s=i.distance,ignoreLocation:n=i.ignoreLocation}={}){let c=t/e.length;if(n)return c;let a=Math.abs(u-r);return s?c+a/s:a?1:c}function convertMaskToIndices(e=[],t=i.minMatchCharLength){let r=[],u=-1,s=-1,n=0;for(let i=e.length;n<i;n+=1){let i=e[n];i&&-1===u?u=n:i||-1===u||((s=n-1)-u+1>=t&&r.push([u,s]),u=-1)}return e[n-1]&&n-u>=t&&r.push([u,n-1]),r}function search(e,t,r,{location:u=i.location,distance:s=i.distance,threshold:n=i.threshold,findAllMatches:c=i.findAllMatches,minMatchCharLength:a=i.minMatchCharLength,includeMatches:h=i.includeMatches,ignoreLocation:o=i.ignoreLocation}={}){let l;if(t.length>32)throw Error(PATTERN_LENGTH_TOO_LARGE(32));let d=t.length,f=e.length,g=Math.max(0,Math.min(u,f)),A=n,p=g,E=a>1||h,C=E?Array(f):[];for(;(l=e.indexOf(t,p))>-1;)if(A=Math.min(computeScore$1(t,{currentLocation:l,expectedLocation:g,distance:s,ignoreLocation:o}),A),p=l+d,E){let e=0;for(;e<d;)C[l+e]=1,e+=1}p=-1;let x=[],y=1,B=d+f,F=1<<d-1;for(let u=0;u<d;u+=1){let i=0,n=B;for(;i<n;){let e=computeScore$1(t,{errors:u,currentLocation:g+n,expectedLocation:g,distance:s,ignoreLocation:o});e<=A?i=n:B=n,n=Math.floor((B-i)/2+i)}B=n;let a=Math.max(1,g-n+1),h=c?f:Math.min(g+n,f)+d,l=Array(h+2);l[h+1]=(1<<u)-1;for(let i=h;i>=a;i-=1){let n=i-1,c=r[e.charAt(n)];if(E&&(C[n]=+!!c),l[i]=(l[i+1]<<1|1)&c,u&&(l[i]|=(x[i+1]|x[i])<<1|1|x[i+1]),l[i]&F&&(y=computeScore$1(t,{errors:u,currentLocation:n,expectedLocation:g,distance:s,ignoreLocation:o}))<=A){if(A=y,(p=n)<=g)break;a=Math.max(1,2*g-p)}}let D=computeScore$1(t,{errors:u+1,currentLocation:g,expectedLocation:g,distance:s,ignoreLocation:o});if(D>A)break;x=l}let D={isMatch:p>=0,score:Math.max(.001,y)};if(E){let e=convertMaskToIndices(C,a);e.length?h&&(D.indices=e):D.isMatch=!1}return D}function createPatternAlphabet(e){let t={};for(let r=0,u=e.length;r<u;r+=1){let s=e.charAt(r);t[s]=(t[s]||0)|1<<u-r-1}return t}let c=String.prototype.normalize?e=>e.normalize("NFD").replace(/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u1885\u1886\u18A9\u1920-\u192B\u1930-\u193B\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C5\uA8E0-\uA8F1\uA8FF\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F]/g,""):e=>e;let BitapSearch=class BitapSearch{constructor(e,{location:t=i.location,threshold:r=i.threshold,distance:u=i.distance,includeMatches:s=i.includeMatches,findAllMatches:n=i.findAllMatches,minMatchCharLength:a=i.minMatchCharLength,isCaseSensitive:h=i.isCaseSensitive,ignoreDiacritics:o=i.ignoreDiacritics,ignoreLocation:l=i.ignoreLocation}={}){if(this.options={location:t,threshold:r,distance:u,includeMatches:s,findAllMatches:n,minMatchCharLength:a,isCaseSensitive:h,ignoreDiacritics:o,ignoreLocation:l},e=h?e:e.toLowerCase(),e=o?c(e):e,this.pattern=e,this.chunks=[],!this.pattern.length)return;let addChunk=(e,t)=>{this.chunks.push({pattern:e,alphabet:createPatternAlphabet(e),startIndex:t})},d=this.pattern.length;if(d>32){let e=0,t=d%32,r=d-t;for(;e<r;)addChunk(this.pattern.substr(e,32),e),e+=32;if(t){let e=d-32;addChunk(this.pattern.substr(e),e)}}else addChunk(this.pattern,0)}searchIn(e){let{isCaseSensitive:t,ignoreDiacritics:r,includeMatches:u}=this.options;if(e=t?e:e.toLowerCase(),e=r?c(e):e,this.pattern===e){let t={isMatch:!0,score:0};return u&&(t.indices=[[0,e.length-1]]),t}let{location:s,distance:i,threshold:n,findAllMatches:a,minMatchCharLength:h,ignoreLocation:o}=this.options,l=[],d=0,f=!1;this.chunks.forEach(({pattern:t,alphabet:r,startIndex:c})=>{let{isMatch:g,score:A,indices:p}=search(e,t,r,{location:s+c,distance:i,threshold:n,findAllMatches:a,minMatchCharLength:h,includeMatches:u,ignoreLocation:o});g&&(f=!0),d+=A,g&&p&&(l=[...l,...p])});let g={isMatch:f,score:f?d/this.chunks.length:1};return f&&u&&(g.indices=l),g}};let BaseMatch=class BaseMatch{constructor(e){this.pattern=e}static isMultiMatch(e){return getMatch(e,this.multiRegex)}static isSingleMatch(e){return getMatch(e,this.singleRegex)}search(){}};function getMatch(e,t){let r=e.match(t);return r?r[1]:null}let ExactMatch=class ExactMatch extends BaseMatch{constructor(e){super(e)}static get type(){return"exact"}static get multiRegex(){return/^="(.*)"$/}static get singleRegex(){return/^=(.*)$/}search(e){let t=e===this.pattern;return{isMatch:t,score:t?0:1,indices:[0,this.pattern.length-1]}}};let InverseExactMatch=class InverseExactMatch extends BaseMatch{constructor(e){super(e)}static get type(){return"inverse-exact"}static get multiRegex(){return/^!"(.*)"$/}static get singleRegex(){return/^!(.*)$/}search(e){let t=e.indexOf(this.pattern),r=-1===t;return{isMatch:r,score:r?0:1,indices:[0,e.length-1]}}};let PrefixExactMatch=class PrefixExactMatch extends BaseMatch{constructor(e){super(e)}static get type(){return"prefix-exact"}static get multiRegex(){return/^\^"(.*)"$/}static get singleRegex(){return/^\^(.*)$/}search(e){let t=e.startsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,this.pattern.length-1]}}};let InversePrefixExactMatch=class InversePrefixExactMatch extends BaseMatch{constructor(e){super(e)}static get type(){return"inverse-prefix-exact"}static get multiRegex(){return/^!\^"(.*)"$/}static get singleRegex(){return/^!\^(.*)$/}search(e){let t=!e.startsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,e.length-1]}}};let SuffixExactMatch=class SuffixExactMatch extends BaseMatch{constructor(e){super(e)}static get type(){return"suffix-exact"}static get multiRegex(){return/^"(.*)"\$$/}static get singleRegex(){return/^(.*)\$$/}search(e){let t=e.endsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[e.length-this.pattern.length,e.length-1]}}};let InverseSuffixExactMatch=class InverseSuffixExactMatch extends BaseMatch{constructor(e){super(e)}static get type(){return"inverse-suffix-exact"}static get multiRegex(){return/^!"(.*)"\$$/}static get singleRegex(){return/^!(.*)\$$/}search(e){let t=!e.endsWith(this.pattern);return{isMatch:t,score:t?0:1,indices:[0,e.length-1]}}};let FuzzyMatch=class FuzzyMatch extends BaseMatch{constructor(e,{location:t=i.location,threshold:r=i.threshold,distance:u=i.distance,includeMatches:s=i.includeMatches,findAllMatches:n=i.findAllMatches,minMatchCharLength:c=i.minMatchCharLength,isCaseSensitive:a=i.isCaseSensitive,ignoreDiacritics:h=i.ignoreDiacritics,ignoreLocation:o=i.ignoreLocation}={}){super(e),this._bitapSearch=new BitapSearch(e,{location:t,threshold:r,distance:u,includeMatches:s,findAllMatches:n,minMatchCharLength:c,isCaseSensitive:a,ignoreDiacritics:h,ignoreLocation:o})}static get type(){return"fuzzy"}static get multiRegex(){return/^"(.*)"$/}static get singleRegex(){return/^(.*)$/}search(e){return this._bitapSearch.searchIn(e)}};let IncludeMatch=class IncludeMatch extends BaseMatch{constructor(e){super(e)}static get type(){return"include"}static get multiRegex(){return/^'"(.*)"$/}static get singleRegex(){return/^'(.*)$/}search(e){let t,r=0,u=[],s=this.pattern.length;for(;(t=e.indexOf(this.pattern,r))>-1;)r=t+s,u.push([t,r-1]);let i=!!u.length;return{isMatch:i,score:i?0:1,indices:u}}};let a=[ExactMatch,IncludeMatch,PrefixExactMatch,InversePrefixExactMatch,InverseSuffixExactMatch,SuffixExactMatch,InverseExactMatch,FuzzyMatch],h=a.length,o=/ +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;function parseQuery(e,t={}){return e.split("|").map(e=>{let r=e.trim().split(o).filter(e=>e&&!!e.trim()),u=[];for(let e=0,s=r.length;e<s;e+=1){let s=r[e],i=!1,n=-1;for(;!i&&++n<h;){let e=a[n],r=e.isMultiMatch(s);r&&(u.push(new e(r,t)),i=!0)}if(!i)for(n=-1;++n<h;){let e=a[n],r=e.isSingleMatch(s);if(r){u.push(new e(r,t));break}}}return u})}let l=new Set([FuzzyMatch.type,IncludeMatch.type]);let ExtendedSearch=class ExtendedSearch{constructor(e,{isCaseSensitive:t=i.isCaseSensitive,ignoreDiacritics:r=i.ignoreDiacritics,includeMatches:u=i.includeMatches,minMatchCharLength:s=i.minMatchCharLength,ignoreLocation:n=i.ignoreLocation,findAllMatches:a=i.findAllMatches,location:h=i.location,threshold:o=i.threshold,distance:l=i.distance}={}){this.query=null,this.options={isCaseSensitive:t,ignoreDiacritics:r,includeMatches:u,minMatchCharLength:s,findAllMatches:a,ignoreLocation:n,location:h,threshold:o,distance:l},e=t?e:e.toLowerCase(),e=r?c(e):e,this.pattern=e,this.query=parseQuery(this.pattern,this.options)}static condition(e,t){return t.useExtendedSearch}searchIn(e){let t=this.query;if(!t)return{isMatch:!1,score:1};let{includeMatches:r,isCaseSensitive:u,ignoreDiacritics:s}=this.options;e=u?e:e.toLowerCase(),e=s?c(e):e;let i=0,n=[],a=0;for(let u=0,s=t.length;u<s;u+=1){let s=t[u];n.length=0,i=0;for(let t=0,u=s.length;t<u;t+=1){let u=s[t],{isMatch:c,indices:h,score:o}=u.search(e);if(c){if(i+=1,a+=o,r){let e=u.constructor.type;l.has(e)?n=[...n,...h]:n.push(h)}}else{a=0,i=0,n.length=0;break}}if(i){let e={isMatch:!0,score:a/i};return r&&(e.indices=n),e}}return{isMatch:!1,score:1}}};let d=[];function register(...e){d.push(...e)}function createSearcher(e,t){for(let r=0,u=d.length;r<u;r+=1){let u=d[r];if(u.condition(e,t))return new u(e,t)}return new BitapSearch(e,t)}let f={AND:"$and",OR:"$or"},g={PATH:"$path",PATTERN:"$val"},isExpression=e=>!!(e[f.AND]||e[f.OR]),isPath=e=>!!e[g.PATH],isLeaf=e=>!isArray(e)&&isObject(e)&&!isExpression(e),convertToExplicit=e=>({[f.AND]:Object.keys(e).map(t=>({[t]:e[t]}))});function parse(e,t,{auto:r=!0}={}){let next=e=>{let u=Object.keys(e),s=isPath(e);if(!s&&u.length>1&&!isExpression(e))return next(convertToExplicit(e));if(isLeaf(e)){let i=s?e[g.PATH]:u[0],n=s?e[g.PATTERN]:e[i];if(!isString(n))throw Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(i));let c={keyId:createKeyId(i),pattern:n};return r&&(c.searcher=createSearcher(n,t)),c}let i={children:[],operator:u[0]};return u.forEach(t=>{let r=e[t];isArray(r)&&r.forEach(e=>{i.children.push(next(e))})}),i};return isExpression(e)||(e=convertToExplicit(e)),next(e)}function computeScore(e,{ignoreFieldNorm:t=i.ignoreFieldNorm}){e.forEach(e=>{let r=1;e.matches.forEach(({key:e,norm:u,score:s})=>{let i=e?e.weight:null;r*=Math.pow(0===s&&i?Number.EPSILON:s,(i||1)*(t?1:u))}),e.score=r})}function transformMatches(e,t){let r=e.matches;t.matches=[],isDefined(r)&&r.forEach(e=>{if(!isDefined(e.indices)||!e.indices.length)return;let{indices:r,value:u}=e,s={indices:r,value:u};e.key&&(s.key=e.key.src),e.idx>-1&&(s.refIndex=e.idx),t.matches.push(s)})}function transformScore(e,t){t.score=e.score}function format(e,t,{includeMatches:r=i.includeMatches,includeScore:u=i.includeScore}={}){let s=[];return r&&s.push(transformMatches),u&&s.push(transformScore),e.map(e=>{let{idx:r}=e,u={item:t[r],refIndex:r};return s.length&&s.forEach(t=>{t(e,u)}),u})}let Fuse=class Fuse{constructor(e,t={},r){this.options={...i,...t},this.options.useExtendedSearch,this._keyStore=new KeyStore(this.options.keys),this.setCollection(e,r)}setCollection(e,t){if(this._docs=e,t&&!(t instanceof FuseIndex))throw Error("Incorrect 'index' type");this._myIndex=t||createIndex(this.options.keys,this._docs,{getFn:this.options.getFn,fieldNormWeight:this.options.fieldNormWeight})}add(e){isDefined(e)&&(this._docs.push(e),this._myIndex.add(e))}remove(e=()=>!1){let t=[];for(let r=0,u=this._docs.length;r<u;r+=1){let s=this._docs[r];e(s,r)&&(this.removeAt(r),r-=1,u-=1,t.push(s))}return t}removeAt(e){this._docs.splice(e,1),this._myIndex.removeAt(e)}getIndex(){return this._myIndex}search(e,{limit:t=-1}={}){let{includeMatches:r,includeScore:u,shouldSort:s,sortFn:i,ignoreFieldNorm:n}=this.options,c=isString(e)?isString(this._docs[0])?this._searchStringList(e):this._searchObjectList(e):this._searchLogical(e);return computeScore(c,{ignoreFieldNorm:n}),s&&c.sort(i),isNumber(t)&&t>-1&&(c=c.slice(0,t)),format(c,this._docs,{includeMatches:r,includeScore:u})}_searchStringList(e){let t=createSearcher(e,this.options),{records:r}=this._myIndex,u=[];return r.forEach(({v:e,i:r,n:s})=>{if(!isDefined(e))return;let{isMatch:i,score:n,indices:c}=t.searchIn(e);i&&u.push({item:e,idx:r,matches:[{score:n,value:e,norm:s,indices:c}]})}),u}_searchLogical(e){let t=parse(e,this.options),evaluate=(e,t,r)=>{if(!e.children){let{keyId:u,searcher:s}=e,i=this._findMatches({key:this._keyStore.get(u),value:this._myIndex.getValueForItemAtKeyId(t,u),searcher:s});return i&&i.length?[{idx:r,item:t,matches:i}]:[]}let u=[];for(let s=0,i=e.children.length;s<i;s+=1){let i=e.children[s],n=evaluate(i,t,r);if(n.length)u.push(...n);else if(e.operator===f.AND)return[]}return u},r=this._myIndex.records,u={},s=[];return r.forEach(({$:e,i:r})=>{if(isDefined(e)){let i=evaluate(t,e,r);i.length&&(u[r]||(u[r]={idx:r,item:e,matches:[]},s.push(u[r])),i.forEach(({matches:e})=>{u[r].matches.push(...e)}))}}),s}_searchObjectList(e){let t=createSearcher(e,this.options),{keys:r,records:u}=this._myIndex,s=[];return u.forEach(({$:e,i:u})=>{if(!isDefined(e))return;let i=[];r.forEach((r,u)=>{i.push(...this._findMatches({key:r,value:e[u],searcher:t}))}),i.length&&s.push({idx:u,item:e,matches:i})}),s}_findMatches({key:e,value:t,searcher:r}){if(!isDefined(t))return[];let u=[];if(isArray(t))t.forEach(({v:t,i:s,n:i})=>{if(!isDefined(t))return;let{isMatch:n,score:c,indices:a}=r.searchIn(t);n&&u.push({score:c,key:e,value:t,idx:s,norm:i,indices:a})});else{let{v:s,n:i}=t,{isMatch:n,score:c,indices:a}=r.searchIn(s);n&&u.push({score:c,key:e,value:s,norm:i,indices:a})}return u}};Fuse.version="7.1.0",Fuse.createIndex=createIndex,Fuse.parseIndex=parseIndex,Fuse.config=i,Fuse.parseQuery=parse,register(ExtendedSearch)}}]);